package juego_de_la_vida.interfaz;

import com.sun.java.swing.plaf.windows.WindowsLookAndFeel;
import java.awt.Point;
import java.util.LinkedList;
import java.util.Random;
import java.util.concurrent.CyclicBarrier;
import juego_de_la_vida.*;

/**
 *
 * @author Bermudez Martin, Kurchan Ines, Marinelli Giuliano
 */
public class PrincipalVisual extends javax.swing.JFrame {

    /**
     * Creates new form Inicio
     */
    public PrincipalVisual() {
        initComponents();
        setLocationRelativeTo(null);
        setAlwaysOnTop(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        anchoLabel = new javax.swing.JLabel();
        altoLabel = new javax.swing.JLabel();
        anchoTextField = new javax.swing.JTextField();
        altoTextField = new javax.swing.JTextField();
        resetRadioButton = new javax.swing.JRadioButton();
        pausaRadioButton = new javax.swing.JRadioButton();
        velocidadCombo = new javax.swing.JComboBox();
        empezarButton = new javax.swing.JButton();
        velocidadLabel = new javax.swing.JLabel();

        jLabel4.setText("jLabel4");

        jRadioButton1.setText("jRadioButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Juego de la vida");
        setAutoRequestFocus(false);
        setResizable(false);

        anchoLabel.setText("Ancho:");

        altoLabel.setText("Alto:");

        anchoTextField.setText("10");

        altoTextField.setText("10");

        resetRadioButton.setText("Empiezan muertas");

        pausaRadioButton.setSelected(true);
        pausaRadioButton.setText("Empieza en pausa");

        velocidadCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "10%", "20%", "30%", "40%", "50%", "60%", "70%", "80%", "90%", "100%" }));
        velocidadCombo.setSelectedIndex(8);

        empezarButton.setText("Â¡Empezar!");
        empezarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empezarButtonActionPerformed(evt);
            }
        });

        velocidadLabel.setText("Velocidad:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(anchoLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(altoLabel)
                .addGap(65, 65, 65))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(anchoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(resetRadioButton))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pausaRadioButton)
                            .addComponent(altoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addComponent(empezarButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(velocidadLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(velocidadCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(anchoLabel)
                    .addComponent(altoLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(anchoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(altoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(resetRadioButton)
                    .addComponent(pausaRadioButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(velocidadCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(velocidadLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(empezarButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Crea un mundo de juego con los datos especificados.
     */
    private void empezarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empezarButtonActionPerformed
        //oculta esta ventana
        this.setVisible(false);
        Random random = new Random();
        //obtiene todos los datos especificados en la interfaz
        int alto;
        int ancho;
        try {
            alto = Integer.parseInt(altoTextField.getText());
            ancho = Integer.parseInt(anchoTextField.getText());
        } catch (NumberFormatException ex) {
            alto = 10;
            ancho = 10;
            System.out.println("\033[34mCREANDO DEFAULT 10x10\033[30m \n");
        }
        if (alto == 0 || ancho == 0) {
            alto = 10;
            ancho = 10;
            System.out.println("\033[34mCREANDO DEFAULT 10x10\033[30m \n");
        }
        boolean empiezaReset = resetRadioButton.isSelected();
        boolean empiezaPausa = pausaRadioButton.isSelected();
        int velocidad;
        switch (velocidadCombo.getSelectedItem().toString()) {
            case "10%":
                velocidad = 9;
                break;
            case "20%":
                velocidad = 8;
                break;
            case "30%":
                velocidad = 7;
                break;
            case "40%":
                velocidad = 6;
                break;
            case "50%":
                velocidad = 5;
                break;
            case "60%":
                velocidad = 4;
                break;
            case "70%":
                velocidad = 3;
                break;
            case "80%":
                velocidad = 2;
                break;
            case "90%":
                velocidad = 1;
                break;
            case "100%":
                velocidad = 0;
                break;
            default:
                velocidad = 1;
                break;
        }

        Celula[][] matrizCelulas = new Celula[alto][ancho];
        Submundo[] submundo = new Submundo[alto];
        CyclicBarrier turno = new CyclicBarrier(alto + 1);

        //Interfaz (contenedor de  los objetos visuales de cada celula
        CelulaVisual[][] matrizCelulasVisuales = new CelulaVisual[alto][ancho];

        //crea las celulas con un estado aleatorio o muertas si esta indicado
        //y las agrega a la matriz
        for (int i = 0; i < alto; i++) {
            for (int j = 0; j < ancho; j++) {
                matrizCelulas[i][j] = new Celula(new Point(i, j));

                //Interfaz (guarda en la matriz el objeto visual de cada celula)
                matrizCelulasVisuales[i][j] = new CelulaVisual();
                matrizCelulas[i][j].addObserver(matrizCelulasVisuales[i][j]);

                matrizCelulas[i][j].setEstadoAct((random.nextBoolean()) && !empiezaReset);
            }
        }

        //llama a un metodo que setea a cada celula cuales son sus adyacentes
        setAdyacentes(matrizCelulas);

        //crea y lanza el mundo del juego
        Mundo mundo = new Mundo(matrizCelulas, velocidad, empiezaPausa, turno);
        Thread mundoThread = new Thread(mundo);
        mundoThread.start();

        //Interfaz (crea el objeto visual del mundo de juego
        MundoVisual mundoVisual = new MundoVisual(matrizCelulasVisuales, mundo, this);
        mundoVisual.setVisible(true);

        //crea y lanza los submundos del juego
        Thread submundoThread;
        for (int i = 0; i < alto; i++) {
            submundo[i] = new Submundo(matrizCelulas, turno, i);
            submundoThread = new Thread(submundo[i]);
            submundoThread.start();
        }
    }//GEN-LAST:event_empezarButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(new WindowsLookAndFeel());
                    break;
                }
            }
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PrincipalVisual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new PrincipalVisual().setVisible(true);
            }
        });
    }

    /**
     * Setea a cada celula una lista con las celulas adyacentes a ella.
     *
     * @param matrizCelulas
     */
    public static void setAdyacentes(Celula[][] matrizCelulas) {
        int alto = matrizCelulas.length;
        int ancho = matrizCelulas[0].length;
        int filaIni;
        int filaFin;
        int colIni;
        int colFin;
        Point pos;
        LinkedList<Celula> adyacentes;
        for (int i = 0; i < alto; i++) {
            for (int j = 0; j < ancho; j++) {
                pos = matrizCelulas[i][j].getPos();
                adyacentes = new LinkedList<>();
                filaIni = (pos.x > 0) ? pos.x - 1 : pos.x;
                filaFin = (pos.x < alto - 1) ? pos.x + 1 : pos.x;
                colIni = (pos.y > 0) ? pos.y - 1 : pos.y;
                colFin = (pos.y < ancho - 1) ? pos.y + 1 : pos.y;
                for (int f = filaIni; f <= filaFin; f++) {
                    for (int c = colIni; c <= colFin; c++) {
                        if (!(f == pos.x && c == pos.y)) {
                            adyacentes.add(matrizCelulas[f][c]);
                        }
                    }
                }
                matrizCelulas[i][j].setAdyacentes(adyacentes);
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel altoLabel;
    private javax.swing.JTextField altoTextField;
    private javax.swing.JLabel anchoLabel;
    private javax.swing.JTextField anchoTextField;
    private javax.swing.JButton empezarButton;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton pausaRadioButton;
    private javax.swing.JRadioButton resetRadioButton;
    private javax.swing.JComboBox velocidadCombo;
    private javax.swing.JLabel velocidadLabel;
    // End of variables declaration//GEN-END:variables
}
